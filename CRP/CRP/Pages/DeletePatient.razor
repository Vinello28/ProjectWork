
@page "/deletepatient/{Id}"
@using DataAccessLayer.Models
@using DataAccessLayer.Services
@inject PatientService patientService
@inject NavigationManager NavigationManager

<h1>DeletePatient</h1>

<hr />
<h3>Are you sure want to delete this?</h3>

<form>
    <div class="row">
        <div class=" col-md-8">
            <div class="form-group">
                <label>Patient Id:</label>
                <label>@obj.PatientId</label>
            </div>
            <div class="form-group">
                <label>First Name:</label>
                <label>@obj.FirstName</label>
            </div>
            <div class="form-group">
                <label>Last Name:</label>
                <label>@obj.LastName</label>
            </div>
            <div class="form-group">
                <label>Date Of Birth:</label>
                <label>@obj.DateOfBirth</label>
            </div>
            <div class="form-group">
                <label>Gender:</label>
                <label>@obj.Gender</label>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-danger" @onclick="@Delete" value="Delete" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public string Id { get; set; }
    Patient obj = new Patient();

    protected override async Task OnInitializedAsync()
    {
        obj = await patientService.GetPatientById(Convert.ToInt32(Id));
    }

    protected async void Delete()
    {
        await patientService.DeletePatient(Convert.ToInt32(Id));
        NavigationManager.NavigateTo("patientlist");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("patientlist");
    }
}